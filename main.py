import requests
import xml.etree.ElementTree as ET
import re
import random

# ============================
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
# ============================
TELEGRAM_TOKEN = "8141858682:AAG_k13Rd2WClI1SDL9W7-zC0vFuRUUkfUw"
CHAT_ID = "6983437462"        # –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ‚Äî –≤–∞—à–µ –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
CHANNEL_ID = "-1002047105840" # –≤–µ—Ä–Ω–µ–º –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

# –†—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–µ RSS-–ª–µ–Ω—Ç—ã
RSS_FEEDS = [
    "https://habr.com/ru/rss/all/all/",
    "https://vc.ru/rss/all",
    "https://ria.ru/export/rss2/archive/index.xml",
    "https://lenta.ru/rss"
]

# ============================
# JSON-—à–∞–±–ª–æ–Ω –ø–æ—Å—Ç–∞
# ============================
ROLE_JSON = {
    "role": "–†–µ–¥–∞–∫—Ç–æ—Ä-–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç \"–Ø—Å–Ω—ã–π –¢–µ–∫—Å—Ç\"",
    "task": (
        "–í–∞—à–∞ —Ü–µ–ª—å ‚Äî –ø–æ–º–æ–≥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–ª—É—á—à–∞—Ç—å —Ç–µ–∫—Å—Ç—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. "
        "–°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ —è—Å–Ω–æ—Å—Ç–∏, –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏ –∏ –ª–∞–∫–æ–Ω–∏—á–Ω–æ—Å—Ç–∏ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ —Å–º—ã—Å–ª–∞."
    ),
    "constraints": [
        "–ù–ï –∏–∑–º–µ–Ω—è—Ç—å —Å–º—ã—Å–ª",
        "–ù–ï –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é",
        "–ù–ï –¥–µ–ª–∞—Ç—å –æ—Ü–µ–Ω–∫–∏",
        "–ù–ï –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–Ω—Ü–µ–ª—è—Ä–∏—Ç"
    ],
    "workflow": [
        "–®–∞–≥ 1: –ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞",
        "–®–∞–≥ 2: –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å—Ç–∏–ª—è",
        "–®–∞–≥ 3: –ê–Ω–∞–ª–∏–∑ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
    ]
}

# ============================
# –ü–∞—Ä—Å–µ—Ä RSS –±–µ–∑ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
# ============================
def parse_rss(url):
    try:
        resp = requests.get(url, headers={"User-Agent": "Mozilla/5.0"}, timeout=10)
        resp.raise_for_status()
        root = ET.fromstring(resp.content)
        items = root.findall(".//item")[:5]
        lst = []
        for i in items:
            title = i.findtext("title", default="–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞")
            desc  = re.sub(r"<[^>]+>", "", i.findtext("description", default="–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è"))
            link  = i.findtext("link", default="")
            lst.append({"title": title, "description": desc, "link": link})
        return lst
    except:
        return []

# ============================
# –°–±–æ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π
# ============================
def collect_news():
    art = []
    for feed in RSS_FEEDS:
        print(f"[INFO] –ß—Ç–µ–Ω–∏–µ {feed}")
        art += parse_rss(feed)
    return art

# ============================
# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞
# ============================
def format_post(a):
    title = a["title"][:80].rstrip("‚Ä¶") + ("‚Ä¶" if len(a["title"])>80 else "")
    desc  = a["description"][:300].rstrip("‚Ä¶") + ("‚Ä¶" if len(a["description"])>300 else "")
    return (
        f"üîç {title}\n\n"
        f"1Ô∏è‚É£ –ß—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å?\n{desc}\n\n"
        f"2Ô∏è‚É£ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?\n"
        f"–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ RSS-–ª–µ–Ω—Ç –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è.\n\n"
        f"3Ô∏è‚É£ –ß–µ–º –ª—É—á—à–µ –∞–Ω–∞–ª–æ–≥–æ–≤?\n"
        f"‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞ 24/7\n"
        f"\n‚úÖ –¢–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏\n\n"
        f"4Ô∏è‚É£ –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:\nüîó {a['link']}\n\n"
        f"5Ô∏è‚É£ –ò—Å—Ç–æ—á–Ω–∏–∫:\nüìå RSS-–ª–µ–Ω—Ç–∞\n\n"
        f"üí° P.S. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!\n\n"
        f"–ë–æ—Ç‚ö´Ô∏èPerplexityPro‚ö´Ô∏è–°–∞–π—Ç\n"
        f"–í–∞—à –∑–∞–ø—Ä–æ—Å: [–≤–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É]"
    )

# ============================
# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
# ============================
def send(text, to_channel=False):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {
        "chat_id": CHANNEL_ID if to_channel else CHAT_ID,
        "text": text,
        "parse_mode": "Markdown",
        "disable_web_page_preview": False
    }
    r = requests.post(url, data=payload, timeout=10)
    if r.status_code!=200:
        print(f"[ERROR] Telegram {r.status_code}: {r.text}")
    else:
        print("[SUCCESS] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")

# ============================
# Main
# ============================
def main():
    news = collect_news()
    if not news:
        print("[WARNING] –ù–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π")
        return
    a = random.choice(news)
    post = format_post(a)
    send(post, to_channel=False)  # –ø–æ–∫–∞ –≤ –õ–°
    # –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞: send(post, to_channel=True)

if __name__=="__main__":
    main()
