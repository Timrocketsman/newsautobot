import requests
import xml.etree.ElementTree as ET
import re
import random

# --------------------------
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
# --------------------------
TELEGRAM_TOKEN = "8141858682:AAG_k13Rd2WClI1SDL9W7-zC0vFuRUUkfUw"
CHANNEL_ID = "-1002047105840"  # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å—Ç—Ä–æ–∫–∞ —Å '-' –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞

# RSS –∏—Å—Ç–æ—á–Ω–∏–∫–∏
RSS_FEEDS = [
    "https://techcrunch.com/feed/",
    "https://habr.com/ru/rss/hub/artificial_intelligence/",
    "https://vc.ru/rss/all",
    "https://feeds.feedburner.com/oreilly/radar",
    "https://www.wired.com/feed/rss"
]

# --------------------------
# –ü—Ä–æ—Å—Ç–æ–π RSS –ø–∞—Ä—Å–µ—Ä
# --------------------------
def parse_rss_simple(url):
    try:
        headers = {
            'User-Agent': 'Mozilla/5.0'
        }
        resp = requests.get(url, headers=headers, timeout=10)
        resp.raise_for_status()
        root = ET.fromstring(resp.content)
        items = root.findall('.//item')[:5]
        articles = []
        for item in items:
            title = item.findtext('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')
            desc = item.findtext('description', '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è')
            link = item.findtext('link', '')
            articles.append({
                'title': title,
                'description': desc,
                'link': link
            })
        return articles
    except Exception as e:
        print(f"[ERROR] –ü–∞—Ä—Å–∏–Ω–≥ {url}: {e}")
        return []

# --------------------------
# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π
# --------------------------
def get_all_news():
    all_articles = []
    for feed in RSS_FEEDS:
        print(f"[INFO] –ü–∞—Ä—Å–∏–Ω–≥: {feed}")
        all_articles += parse_rss_simple(feed)
    return all_articles

# --------------------------
# –û—á–∏—Å—Ç–∫–∞ HTML
# --------------------------
def clean_html(text):
    return re.sub(r'<[^>]+>', '', text)

# --------------------------
# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
# --------------------------
def format_news(article):
    title = article['title'][:60] + "..." if len(article['title']) > 60 else article['title']
    desc = clean_html(article['description'])[:200] + "..."
    return (
        f"üîç {title}\n\n"
        f"1Ô∏è‚É£ –ß—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å?\n{desc}\n\n"
        "2Ô∏è‚É£ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?\n"
        "üì∞ –°–≤–µ–∂–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –º–∏—Ä–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –ò–ò\n\n"
        "3Ô∏è‚É£ –ß–µ–º –≤–∞–∂–Ω–æ?\n"
        "‚úÖ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–Ω–¥—ã\n"
        "‚úÖ –ù–æ–≤–æ—Å—Ç–∏ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏\n\n"
        f"4Ô∏è‚É£ –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:\nüîó {article['link']}\n\n"
        "üí° P.S. –û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –≤ –∫—É—Ä—Å–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π! üöÄ"
    )

# --------------------------
# –ü—É–±–ª–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ HTTP API
# --------------------------
def post_to_telegram(text):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {
        'chat_id': CHANNEL_ID,
        'text': text,
        'parse_mode': 'Markdown',
        'disable_web_page_preview': False
    }
    resp = requests.post(url, data=payload, timeout=10)
    if resp.status_code == 200:
        print("[SUCCESS] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª")
        return True
    else:
        print(f"[ERROR] Telegram API {resp.status_code}: {resp.text}")
        return False

# --------------------------
# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
# --------------------------
def main():
    print("[INFO] –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    articles = get_all_news()
    if not articles:
        print("[WARNING] –ù–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π")
        return
    article = random.choice(articles)
    print(f"[INFO] –í—ã–±—Ä–∞–Ω–∞ –Ω–æ–≤–æ—Å—Ç—å: {article['title'][:40]}")
    text = format_news(article)
    post_to_telegram(text)

if __name__ == "__main__":
    main()
