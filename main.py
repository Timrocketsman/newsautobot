import requests
from telegram import Bot
import xml.etree.ElementTree as ET
import re
from datetime import datetime
import random

# --------------------------
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
# --------------------------
TELEGRAM_TOKEN = "8141858682:AAG_k13Rd2WClI1SDL9W7-zC0vFuRUUkfUw"
CHANNEL_ID = "-1002047105840"

# RSS –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
RSS_FEEDS = [
    "https://techcrunch.com/feed/",
    "https://www.theverge.com/rss/index.xml",
    "https://habr.com/ru/rss/hub/artificial_intelligence/",
    "https://vc.ru/rss/all"
]

# --------------------------
# –ü—Ä–æ—Å—Ç–æ–π RSS –ø–∞—Ä—Å–µ—Ä –±–µ–∑ feedparser
# --------------------------
def parse_rss_simple(url):
    try:
        response = requests.get(url, timeout=10)
        response.raise_for_status()
        
        # –ü–∞—Ä—Å–∏–º XML
        root = ET.fromstring(response.content)
        
        articles = []
        items = root.findall('.//item')[:5]  # –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–µ 5 —Å—Ç–∞—Ç–µ–π
        
        for item in items:
            title = item.find('title')
            description = item.find('description')
            link = item.find('link')
            
            article = {
                'title': title.text if title is not None else '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞',
                'description': description.text if description is not None else '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è',
                'link': link.text if link is not None else ''
            }
            articles.append(article)
            
        return articles
        
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ {url}: {e}")
        return []

# --------------------------
# –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
# --------------------------
def get_all_news():
    all_articles = []
    
    for feed_url in RSS_FEEDS:
        print(f"[INFO] –ü–∞—Ä—Å–∏–Ω–≥: {feed_url}")
        articles = parse_rss_simple(feed_url)
        all_articles.extend(articles)
        
    return all_articles

# --------------------------
# –û—á–∏—Å—Ç–∫–∞ HTML —Ç–µ–≥–æ–≤ –∏–∑ —Ç–µ–∫—Å—Ç–∞
# --------------------------
def clean_html(text):
    clean = re.compile('<.*?>')
    return re.sub(clean, '', text)[:300] + "..." if len(text) > 300 else text

# --------------------------
# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
# --------------------------
def format_news(article):
    title = article['title'][:60] + "..." if len(article['title']) > 60 else article['title']
    description = clean_html(article['description'])
    
    formatted_post = f"""üîç {title}

1Ô∏è‚É£ –ß—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å?
{description[:200]}...

2Ô∏è‚É£ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?
üì∞ –°–≤–µ–∂–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –º–∏—Ä–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –ò–ò

3Ô∏è‚É£ –ß–µ–º –≤–∞–∂–Ω–æ?
‚úÖ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–Ω–¥—ã
‚úÖ –ù–æ–≤–æ—Å—Ç–∏ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏
‚úÖ –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è IT-—Å–æ–æ–±—â–µ—Å—Ç–≤–∞

4Ô∏è‚É£ –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:
üîó [–ß–∏—Ç–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é]({article['link']})

üí° P.S. –û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –≤ –∫—É—Ä—Å–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π! üöÄ

#–ù–æ–≤–æ—Å—Ç–∏ #–ò–ò #–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏

–ë–æ—Ç‚ö´Ô∏è–°–∞–π—Ç

[–ë–æ—Ç](https://t.me/BrainAid_bot) | [–°–∞–π—Ç](https://brainaid.ru/)"""

    return formatted_post

# --------------------------
# –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ Telegram
# --------------------------
def post_to_telegram(text):
    try:
        bot = Bot(token=TELEGRAM_TOKEN)
        bot.send_message(
            chat_id=CHANNEL_ID, 
            text=text, 
            parse_mode="Markdown",
            disable_web_page_preview=False
        )
        print("[SUCCESS] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
        return True
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
        return False

# --------------------------
# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
# --------------------------
def main():
    print("[INFO] –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ –±–æ—Ç–∞...")
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏
    print("[INFO] –°–±–æ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π...")
    articles = get_all_news()
    
    if not articles:
        print("[WARNING] –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return
        
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å
    selected_article = random.choice(articles)
    print(f"[INFO] –í—ã–±—Ä–∞–Ω–∞: {selected_article['title'][:40]}...")
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
    formatted_post = format_news(selected_article)
    
    print("[INFO] –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –∫–∞–Ω–∞–ª...")
    if post_to_telegram(formatted_post):
        print("[DONE] –ù–æ–≤–æ—Å—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞!")
    else:
        print("[ERROR] –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!")

# --------------------------
# –ó–∞–ø—É—Å–∫
# --------------------------
if __name__ == "__main__":
    main()
